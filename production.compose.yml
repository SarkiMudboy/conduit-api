x-secrets: &secrets
  - DB_HOST=${DB_HOST}
  - DB_NAME=${DB_NAME}
  - DB_USER=${DB_USER}
  - DB_PASSWORD=${DB_PASSWORD}
  - DB_PORT=${DB_PORT}
  - DEBUG=${DEBUG}

  - SECRET_KEY=${SECRET_KEY}
  - SMTP_PORT=${SMTP_PORT}
  - SMTP_SERVER=${SMTP_SERVER}
  - EMAIL_ADDRESS=${EMAIL_ADDRESS}
  - EMAIL_APP_PASSWORD=${EMAIL_APP_PASSWORD}

  - CSRF_TRUSTED_ORIGINS=${CSRF_TRUSTED_ORIGINS}

  - CELERY_BROKER_URL=${CELERY_BROKER_URL}
  - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}

  - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}

  - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
  - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
  - AWS_BUCKET_NAME=${AWS_BUCKET_NAME}

  - GITHUB_OAUTH_CLIENT_ID=${GITHUB_OAUTH_CLIENT_ID}
  - GITHUB_OAUTH_CLIENT_SECRET=${GITHUB_OAUTH_CLIENT_SECRET}

services:
  app:
    build:
      context: .
      dockerfile: "./docker/production.Dockerfile"

    ports:
      - "8000:8000"

    container_name: CD-APP
    volumes:
      - ./conduit:/conduit
      - ./static:/conduit/staticfiles

    environment: *secrets
    depends_on:
      - db

    env_file: .env.prod

  db:
    image: postgres:alpine3.19

    container_name: CD-DB
    volumes:
      - conduit-db-data:/var/lib/postgresql/data

    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}

    ports:
      - 5430:5432

    env_file: .env.prod

  redis:
    image: redis:alpine3.17
    container_name: CD-RD

    env_file: *env

  celery:
    build:
      context: .

    volumes:
      - ./conduit:/conduit
    working_dir: /conduit
    restart: always

    command: "python -m celery -A conduit worker -l info --pool=solo"
    container_name: CD-CL
    environment: *secrets

    depends_on:
      - db
      - redis

    env_file: .env.prod

  frontend-proxy:
    image: nginx:latest
    ports:
      - "8001:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./static:/static:ro
    depends_on:
      - app

volumes:
  conduit-db-data:
